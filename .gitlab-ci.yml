stages:
  - deploy
  - test
  - clean
  
deploy:
  stage: deploy
  script:
    - ./get_vars.sh
    - terraform init
    - terraform apply -var-file=config.tfvars -auto-approve -target=module.s3_quotes
    - terraform apply -var-file=config.tfvars -auto-approve

test:
  stage: test
  script:
    - ./get_vars.sh
    - pip3 install -e .
    - python3 -m pytest test/test_get_quotes.py
    - python3 -m pytest test/test_html2csv.py
    - python3 -m pytest test/test_clean_quotes.py

clean_temp_deploy:
  stage: clean
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'master'
      when: never
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never  
    - if: $CI_MERGE_REQUEST_ID
      when: on_success
  script:
    - ./get_vars.sh source
    - terraform init
    - terraform destroy -var-file=config.tfvars -auto-approve
